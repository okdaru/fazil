---
// src/pages/index.astro - Versión final SIN errores TypeScript
import FazilLayout from '../layouts/FazilLayout.astro';
import FazilHeader from '../components/FazilHeader.astro';
import FazilHero from '../components/FazilHero.astro';
import FazilServices from '../components/FazilServices.astro';
import FazilBusinessUnits from '../components/FazilBusinessUnits.astro';
import FazilFooter from '../components/FazilFooter.astro';
---

<FazilLayout 
  title="FAZIL - Desarrollo Web a Medida, Apps, Software y Gamificación | Empresa Tecnológica Colombia"
  description="FAZIL desarrolla páginas web a medida, aplicaciones móviles, software personalizado y experiencias gamificadas. Especialistas en desarrollo tecnológico completo con APIs, consultoría y optimización. Cotización personalizada en Colombia."
  canonical="https://fazil.pro/"
  ogImage="https://fazil.pro/images/fazil-og-complete.webp"
>
  <FazilHeader />
  <FazilHero />
  <FazilServices />
  <FazilBusinessUnits />
  <FazilFooter />
</FazilLayout>

<style>
  /* Estilos para animaciones básicas */
  body {
    overflow-x: hidden;
    margin: 0;
    padding: 0;
  }

  * {
    box-sizing: border-box;
  }

  /* Hover effects mejorados */
  a, button, .service-item { 
    transition: all 0.3s ease; 
    cursor: pointer; 
  }
  
  a:hover, button:hover { 
    transform: translateY(-2px);
    filter: brightness(1.1); 
  }
  
  .service-item:hover {
    transform: translateY(-5px);
  }
  
  .service-item:hover .glassmorphism { 
    background: rgba(255, 255, 255, 0.15); 
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  }
  
  /* Performance optimization */
  .hero-section {
    will-change: background;
  }
  
  @media (prefers-reduced-motion: reduce) { 
    * { 
      animation-duration: 0.01ms !important; 
      animation-iteration-count: 1 !important; 
      transition-duration: 0.01ms !important; 
    } 
  }
</style>

<!-- Script optimizado sin errores TypeScript -->
<script is:inline>
(function() {
  'use strict';
  
  function initEffects() {
    // Parallax effect para orbs
    var orbs = document.querySelectorAll('.gradient-orb');
    if (orbs.length > 0) {
      document.addEventListener('mousemove', function(e) {
        var x = e.clientX / window.innerWidth;
        var y = e.clientY / window.innerHeight;
        
        for (var i = 0; i < orbs.length; i++) {
          var orb = orbs[i];
          var speed = (i + 1) * 0.5;
          var xMove = (x - 0.5) * speed * 50;
          var yMove = (y - 0.5) * speed * 50;
          
          orb.style.transform = 'translate(' + xMove + 'px, ' + yMove + 'px)';
        }
      });
    }

    // Particle burst en clicks
    document.addEventListener('click', function(e) {
      var colors = ['#3B82F6', '#8B5CF6', '#10B981', '#F59E0B', '#EF4444'];
      
      for (var i = 0; i < 6; i++) {
        var particle = document.createElement('div');
        var color = colors[Math.floor(Math.random() * colors.length)];
        
        particle.style.cssText = 
          'position:fixed;width:4px;height:4px;background:' + color + 
          ';border-radius:50%;pointer-events:none;z-index:9999;left:' + 
          e.clientX + 'px;top:' + e.clientY + 'px;';
        
        document.body.appendChild(particle);
        
        (function(p, startX, startY, idx) {
          var angle = (idx / 6) * Math.PI * 2;
          var velocity = 100 + Math.random() * 50;
          var vx = Math.cos(angle) * velocity;
          var vy = Math.sin(angle) * velocity;
          var start = Date.now();
          
          function animate() {
            var elapsed = Date.now() - start;
            var progress = elapsed / 1000;
            
            if (progress < 1 && p.parentNode) {
              var currentX = startX + vx * progress;
              var currentY = startY + vy * progress + 0.5 * 300 * progress * progress;
              var opacity = 1 - progress;
              
              p.style.left = currentX + 'px';
              p.style.top = currentY + 'px';
              p.style.opacity = opacity;
              
              requestAnimationFrame(animate);
            } else if (p.parentNode) {
              p.remove();
            }
          }
          animate();
        })(particle, e.clientX, e.clientY, i);
      }
    });

    // Background gradient que sigue el mouse
    var heroSection = document.querySelector('.hero-section');
    if (heroSection) {
      document.addEventListener('mousemove', function(e) {
        var x = (e.clientX / window.innerWidth) * 100;
        var y = (e.clientY / window.innerHeight) * 100;
        
        heroSection.style.background = 
          'radial-gradient(circle at ' + x + '% ' + y + 
          '%, rgba(59, 130, 246, 0.15) 0%, transparent 50%), ' +
          'linear-gradient(135deg, rgb(15, 23, 42) 0%, rgb(30, 58, 138) 35%, rgb(88, 28, 135) 100%)';
      });
    }

    // Hover effects mejorados
    var elements = document.querySelectorAll('a, button, .service-item');
    for (var i = 0; i < elements.length; i++) {
      var element = elements[i];
      
      element.addEventListener('mouseenter', function() {
        this.style.transform = 'translateY(-3px) scale(1.02)';
        this.style.transition = 'all 0.3s ease';
      });
      
      element.addEventListener('mouseleave', function() {
        this.style.transform = 'translateY(0) scale(1)';
      });
    }
  }

  // Inicializar cuando esté listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initEffects);
  } else {
    initEffects();
  }
})();
</script>